{"name":"Geheimschreiber","tagline":"A Go implementation of the Geheimschreiber (\"G-writer\")","body":"Geheimschreiber\r\n====================\r\n\r\n*June, 1940.*\r\n\r\n\r\n*The Allies have discovered that the Germans are using a new machine known as the [Geheimschreiber](https://en.wikipedia.org/wiki/Geheimschreiber), or \"secret writer\". Similar to its cousin, the [Enigma machine](https://en.wikipedia.org/wiki/Enigma_machine), the Geheimschreiber uses a series of wheels of varying length to encrypt messages by alphabetic substitution. The Germans change the wheel order on a regular basis (perhaps daily), making the messages more difficult to decipher.*\r\n\r\n\r\n*Nevertheless, we have been able to identify several flaws with this new encryption scheme which enables us to decipher the Germans' messages with ease. For convenience, we have built a computational component, or \"library\" to automate this decryption. Below you will find the manual for its use.*\r\n\r\n\r\nUsage\r\n==============\r\n\r\nDecryption\r\n-------------\r\n\r\n\r\nCollect a series of messages that are known to be encrypted with the same wheels and wheel order. Intelligence tells us that the Germans change this on a daily basis, so \r\n\r\nPlace these messages, one per line, in a file. The unencrypted messages always begin with `UMUM4VEVE35` and end with `35`, and the decryption scheme takes advantage of this fact. Therefore, it is critical that messages be separated and given their own line.\r\n\r\n\r\nFirst, determine the order of the wheels and the values of the \"spokes\" on each wheel:\r\n\r\n````go\r\n    wheels := crackMessage(\"daily_messages-1941-06-30.txt\")\r\n````\r\n\r\nIf this fails, your team has not yet intercepted enough messages from the Germans yet today. Be patient! \r\n\r\nNow that you have the wheels, simply decrypt the ciphertext:\r\n\r\n````go\r\n    result, err := DecryptString(wheels, \"daily_messages-1941-06-30.txt\")\r\n````\r\n\r\n\r\nEncryption\r\n----------------\r\n\r\nNow that you know the wheels that were used to encrypt the message, you can send decoy messages that look like they came from the Germans.\r\n\r\n\r\n````go\r\nresult, err := EncryptString(wheels, \"daily_messages_tampered-1941-06-30.txt\")\r\n````\r\n\r\n\r\nDisclaimer\r\n================\r\n\r\nThis project is for educational and/or entertainment purposes only. Should you find yourself on the unfortunate end of a mishap with a time machine (no judgement - it happens to the best of us) and end up in Bletchley Park circa 1945, this library is likely to be of very little use to you. Sorry.\r\n\r\n\r\n\r\nLicense\r\n==========\r\n\r\nÂ© 2013 Aditya Mukerjee and Greg Tobkin\r\n\r\nThis library is free software distributed under Version 3 of the GNU Public License.\r\n","google":"UA-42886409-1","note":"Don't delete this file! It's used internally to help with page regeneration."}